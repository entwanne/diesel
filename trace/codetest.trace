Symbol table will be printed after compilation.
Generating assembler for procedure "WRITE_INT"
Generating assembler, global level

Symbol table (size = 38):
Pos  Name      Lev Hash Back Offs Type      Tag
-----------------------------------------------
  0: GLOBAL.     0   -1  159    0 GLOBAL.   SYM_PROC      lbl = -1 ar_size = 0
  1: VOID        0   -1   82    0 VOID      SYM_NAMETYPE
  2: INTEGER     0   -1  462    0 VOID      SYM_NAMETYPE
  3: REAL        0   -1  324    0 VOID      SYM_NAMETYPE
  4: READ        0   -1  316    0 INTEGER   SYM_FUNC      lbl = 0  ar_size = 0
  5: WRITE       0   -1  139    0 VOID      SYM_PROC      lbl = 1  ar_size = 0
  6: INT-ARG     0   -1  210    0 INTEGER   SYM_PARAM
  7: TRUNC       0   -1  332    0 INTEGER   SYM_FUNC      lbl = 2  ar_size = 0
  8: REAL-ARG    0   -1  427    0 REAL      SYM_PARAM
  9: MAIN        0   -1  357    0 VOID      SYM_PROC      lbl = 3  ar_size = 4
 10: WRITE_INT   1   -1  245    0 VOID      SYM_PROC      lbl = 4  ar_size = 132
 11: VAL         2   -1  131    0 INTEGER   SYM_PARAM
 12: ASCII0      2   -1   57    0 INTEGER   SYM_CONST     value = 48
 13: MINUS       2   -1  396    0 INTEGER   SYM_CONST     value = 45
 14: C           2   -1   67    0 INTEGER   SYM_VAR
 15: BUF         2   -1  509    4 INTEGER   SYM_ARRAY     card = 10
 16: BUFP        2   -1  493   44 INTEGER   SYM_VAR
 17: $1          2   -1  213   48 INTEGER   SYM_VAR
 18: $2          2   -1  214   52 INTEGER   SYM_VAR
 19: $3          2   -1  215   56 INTEGER   SYM_VAR
 20: $4          2   -1  216   60 INTEGER   SYM_VAR
 21: $5          2   -1  217   64 INTEGER   SYM_VAR
 22: $6          2   -1  218   68 INTEGER   SYM_VAR
 23: $7          2   -1  219   72 INTEGER   SYM_VAR
 24: $8          2   -1  220   76 INTEGER   SYM_VAR
 25: $9          2   -1  221   80 INTEGER   SYM_VAR
 26: $10         2   -1  421   84 INTEGER   SYM_VAR
 27: $11         2   -1  422   88 INTEGER   SYM_VAR
 28: $12         2   -1  423   92 INTEGER   SYM_VAR
 29: $13         2   -1  424   96 INTEGER   SYM_VAR
 30: $14         2   -1  425  100 INTEGER   SYM_VAR
 31: $15         2   -1  426  104 INTEGER   SYM_VAR
 32: $16         2    8  427  108 INTEGER   SYM_VAR
 33: $17         2   -1  428  112 INTEGER   SYM_VAR
 34: $18         2   -1  429  116 INTEGER   SYM_VAR
 35: $19         2   -1  430  120 INTEGER   SYM_VAR
 36: $20         2   -1  454  124 INTEGER   SYM_VAR
 37: $21         2   -1  455  128 INTEGER   SYM_VAR
 38: $22         1   -1  456    0 INTEGER   SYM_VAR


(A listing of d.out for codetest.d)
#include "diesel_glue.s"
L4:			! WRITE_INT
		set	-224,%l0
		save	%sp,%l0,%sp
		st	%g2,[%fp+64]
		mov	%fp,%g2
		st	%i0,[%fp+68]
		set	0,%o0
		st	%o0,[%g2-52]
		ld	[%g2+68],%o0
		ld	[%g2-52],%o1
		cmp	%o0,%o1
		bne,a	L12
		mov	0,%o0
		mov	1,%o0
L12:
		st	%o0,[%g2-56]
		ld	[%g2-56],%o0
		tst	%o0
		be	L6
		nop
		set	48,%o0
		call	L1	! WRITE
		nop
		ba	L5
		nop
L6:
		set	0,%o0
		st	%o0,[%g2-60]
		ld	[%g2+68],%o0
		ld	[%g2-60],%o1
		cmp	%o0,%o1
		bge,a	L13
		mov	0,%o0
		mov	1,%o0
L13:
		st	%o0,[%g2-64]
		ld	[%g2-64],%o0
		tst	%o0
		be	L7
		nop
		set	45,%o0
		call	L1	! WRITE
		nop
		ld	[%g2+68],%o0
		neg	%o0
		st	%o0,[%g2-68]
		ld	[%g2-68],%o0
		st	%o0,[%g2+68]
L7:
		set	0,%o0
		st	%o0,[%g2-72]
		ld	[%g2-72],%o0
		st	%o0,[%g2-48]
L8:
		set	0,%o0
		st	%o0,[%g2-76]
		ld	[%g2+68],%o0
		ld	[%g2-76],%o1
		cmp	%o0,%o1
		ble,a	L14
		mov	0,%o0
		mov	1,%o0
L14:
		st	%o0,[%g2-80]
		ld	[%g2-80],%o0
		tst	%o0
		be	L9
		nop
		set	10,%o0
		st	%o0,[%g2-84]
		ld	[%g2+68],%o0
		ld	[%g2-84],%o1
		call	Rem
		nop
		st	%o0,[%g2-88]
		ld	[%g2-88],%o0
		st	%o0,[%g2-4]
		ld	[%g2-4],%o0
		set	48,%o1
		add	%o0,%o1,%o0
		st	%o0,[%g2-92]
		ld	[%g2-48],%o1
		sub	%g2,44,%o0
		sll	%o1,2,%o1
		add	%o0,%o1,%o0
		st	%o0,[%g2-96]
		ld	[%g2-92],%o0
		ld	[%g2-96],%o1
		st	%o0,[%o1]
		set	1,%o0
		st	%o0,[%g2-100]
		ld	[%g2-48],%o0
		ld	[%g2-100],%o1
		add	%o0,%o1,%o0
		st	%o0,[%g2-104]
		ld	[%g2-104],%o0
		st	%o0,[%g2-48]
		set	10,%o0
		st	%o0,[%g2-108]
		ld	[%g2+68],%o0
		ld	[%g2-108],%o1
		call	Div
		nop
		st	%o0,[%g2-112]
		ld	[%g2-112],%o0
		st	%o0,[%g2+68]
		ba	L8
		nop
L9:
L10:
		set	0,%o0
		st	%o0,[%g2-116]
		ld	[%g2-48],%o0
		ld	[%g2-116],%o1
		cmp	%o0,%o1
		ble,a	L15
		mov	0,%o0
		mov	1,%o0
L15:
		st	%o0,[%g2-120]
		ld	[%g2-120],%o0
		tst	%o0
		be	L11
		nop
		set	1,%o0
		st	%o0,[%g2-124]
		ld	[%g2-48],%o0
		ld	[%g2-124],%o1
		sub	%o0,%o1,%o0
		st	%o0,[%g2-128]
		ld	[%g2-128],%o0
		st	%o0,[%g2-48]
		ld	[%g2-48],%o1
		sub	%g2,44,%o0
		sll	%o1,2,%o1
		ld	[%o0+%o1],%o0
		st	%o0,[%g2-132]
		ld	[%g2-132],%o0
		call	L1	! WRITE
		nop
		ba	L10
		nop
L11:
L5:
		ld	[%fp+64],%g2
		ret
		restore
L3:			! MAIN
		set	-96,%l0
		save	%sp,%l0,%sp
		st	%g1,[%fp+64]
		mov	%fp,%g1
		set	23,%o0
		st	%o0,[%g1-4]
		ld	[%g1-4],%o0
		call	L4	! WRITE_INT
		nop
L16:
		ld	[%fp+64],%g1
		ret
		restore
